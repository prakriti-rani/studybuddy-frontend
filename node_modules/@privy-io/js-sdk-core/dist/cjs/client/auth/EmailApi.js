"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@privy-io/public-api"),s=require("./maybeCreateWalletOnLogin.js");require("../../utils/getUserEmbeddedEthereumWallet.js"),require("../../utils/getAllUserEmbeddedEthereumWallets.js"),require("../../utils/getUserEmbeddedSolanaWallet.js"),require("../../utils/getAllUserEmbeddedSolanaWallets.js"),require("../../utils/shouldCreateEmbeddedEthWallet.js"),require("../../utils/shouldCreateEmbeddedSolWallet.js");exports.default=class{async sendCode(s,t){return this._privyInternal.fetch(e.PasswordlessInit,{body:{email:s,token:t}})}async loginWithCode(t,r,a,i){let l=await this._privyInternal.fetch(e.PasswordlessAuthenticate,{body:{email:t,code:r,mode:a}});await this._privyInternal.session.updateWithTokensResponse(l);let d=await s.maybeCreateWalletOnLogin(this._embedded,l,i?.embedded);return this._privyInternal.callbacks?.setUser?.(d.user),d}async linkWithCode(s,t){return await this._privyInternal.fetch(e.PasswordlessLink,{body:{email:s,code:t}}),(await this._privyInternal.refreshSession()).user}async updateEmail({oldEmailAddress:s,newEmailAddress:t,code:r}){return await this._privyInternal.fetch(e.PasswordlessUpdate,{body:{oldAddress:s,newAddress:t,code:r}}),(await this._privyInternal.refreshSession()).user}async unlink(s){return await this._privyInternal.fetch(e.PasswordlessUnlink,{body:{address:s}}),(await this._privyInternal.refreshSession()).user}constructor(e,s){this._privyInternal=e,this._embedded=s}};
