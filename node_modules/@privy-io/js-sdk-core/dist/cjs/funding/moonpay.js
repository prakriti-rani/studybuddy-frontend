"use strict";var e=require("../chains/arbitrum.js"),n=require("../chains/avalanche.js"),r=require("../chains/base.js"),a=require("../chains/celo.js"),t=require("../chains/mainnet.js"),i=require("../chains/optimism.js"),o=require("../chains/polygon.js");let s=new Set([t.mainnet.id,e.arbitrum.id,r.base.id,o.polygon.id,n.avalanche.id,a.celo.id]),c=new Set([t.mainnet.id,e.arbitrum.id,i.optimism.id,r.base.id,o.polygon.id]);exports.MoonpayEnvironments={prod:{url:"https://api.moonpay.com/v1",key:"pk_live_hirbpu0cVcLHrjktC9l7fbc9ctjv0SL"},sandbox:{url:"https://api.moonpay.com/v1",key:"pk_test_fqWjXZMSFwloh7orvJsRfjiUHXJqFzI"}},exports.chainToMoonpayCurrency=function(i,s){switch(i){case e.arbitrum.id:return"native-currency"===s?"ETH_ARBITRUM":"USDC_ARBITRUM";case n.avalanche.id:return"AVAX_CCHAIN";case r.base.id:return"native-currency"===s?"ETH_BASE":"USDC_BASE";case a.celo.id:return"CELO_CELO";case o.polygon.id:return"native-currency"===s?"MATIC_POLYGON":"USDC_POLYGON";case t.mainnet.id:return"native-currency"===s?"ETH_ETHEREUM":"USDC_ETHEREUM";default:return console.warn(`Chain ${i} not supported by Moonpay, defaulting to Ethereum mainnet`),"ETH_ETHEREUM"}},exports.fundingMethodToMoonpayPaymentMethod=function(e){switch(e){case"card":case"payment-request":return"credit_debit_card";default:throw Error(`Unsupported Moonpay funding method ${e}`)}},exports.isSupportedChainIdForMoonpay=function(e,n){switch(n){case"native-currency":return s.has(e);case"USDC":return c.has(e);default:return console.warn("Unknown asset passed to MoonPay Onramp"),!1}};
