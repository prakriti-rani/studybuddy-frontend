import{PasswordlessSmsInit as e,PasswordlessSmsAuthenticate as t,PasswordlessSmsLink as r,PasswordlessSmsUpdate as s,PasswordlessSmsUnlink as i}from"@privy-io/public-api";import{maybeCreateWalletOnLogin as n}from"./maybeCreateWalletOnLogin.mjs";import"../../utils/getUserEmbeddedEthereumWallet.mjs";import"../../utils/getAllUserEmbeddedEthereumWallets.mjs";import"../../utils/getUserEmbeddedSolanaWallet.mjs";import"../../utils/getAllUserEmbeddedSolanaWallets.mjs";import"../../utils/shouldCreateEmbeddedEthWallet.mjs";import"../../utils/shouldCreateEmbeddedSolWallet.mjs";class a{async sendCode(t,r){return this._privyInternal.fetch(e,{body:{phoneNumber:t,token:r}})}async loginWithCode(e,r,s,i){let a=await this._privyInternal.fetch(t,{body:{phoneNumber:e,code:r,mode:s}});await this._privyInternal.session.updateWithTokensResponse(a);let l=await n(this._embedded,a,i?.embedded);return this._privyInternal.callbacks?.setUser?.(l.user),l}async linkWithCode(e,t){return await this._privyInternal.fetch(r,{body:{phoneNumber:e,code:t}}),(await this._privyInternal.refreshSession()).user}async updatePhone({oldPhoneNumber:e,newPhoneNumber:t,code:r}){return await this._privyInternal.fetch(s,{body:{old_phone_number:e,new_phone_number:t,code:r}}),(await this._privyInternal.refreshSession()).user}async unlink(e){return await this._privyInternal.fetch(i,{body:{phoneNumber:e}}),(await this._privyInternal.refreshSession()).user}constructor(e,t){this._privyInternal=e,this._embedded=t}}export{a as default};
