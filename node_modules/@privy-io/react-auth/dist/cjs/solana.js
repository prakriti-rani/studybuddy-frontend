"use strict";var e=require("@solana/wallet-adapter-base"),t=require("@solana/wallet-standard-wallet-adapter-base"),n=require("@wallet-standard/app"),r=require("./prepareFundingModalData-BCNQSbXb.js"),a=require("react"),s=require("./importWallet-CqIkwxB-.js"),l=require("./internal-context-DV3MljLU.js"),i=require("./useWallets-Dmyb5a0t.js"),o=require("./useFundWallet-BLEO3WzQ.js");require("eventemitter3"),require("@privy-io/js-sdk-core"),require("react/jsx-runtime"),require("ofetch"),require("viem/utils"),require("tinycolor2"),require("@solana/web3.js");let u=n=>n.filter(e.isWalletAdapterCompatibleStandardWallet).map((e=>new t.StandardWalletAdapter({wallet:e})));exports.SolanaAdapterConnector=r.SolanaWalletConnector,exports.useSolanaWallets=r.useSolanaWallets,exports.useFundWallet=o.useFundWallet,exports.toSolanaWalletConnectors=e=>{let t,{get:a,on:s}=n.getWallets(),l=e?.shouldAutoConnect??!0,i=[],o=[];function p(...e){o=(i=i.concat(...u(e))).map((e=>new r.SolanaWalletConnector(e,l))),t?.(o)}function c(...e){o=(i=i.filter((t=>e.some((e=>t.wallet===e))))).map((e=>new r.SolanaWalletConnector(e,l))),t?.(o)}let g=[s("register",p),s("unregister",c)];return o=(i=u(a())).map((e=>new r.SolanaWalletConnector(e,l))),{_setOnConnectorsUpdated:e=>{t=e},onMount:()=>{g[0]||(g[0]=s("register",p)),g[1]||(g[1]=s("unregister",c))},onUnmount:()=>{let e=g.pop();for(;e;)e(),e=g.pop()},get:()=>o}},exports.useImportWallet=()=>{let{getAccessToken:e,user:t}=i.usePrivyContext(),{refreshSessionAndUser:n,initializeWalletProxy:o}=l.usePrivyInternal(),u=r.useEmitPrivyEvent();return{importWallet:a.useCallback((({privateKey:r})=>s.importWallet({getAccessToken:e,user:t,initializeWalletProxy:o,refreshSessionAndUser:n,emitPrivyEvent:u},{privateKey:r,chainType:"solana"})),[t,e,n,o,u])}},exports.useSendTransaction=function(e){let{sendSolanaTransaction:t}=l.usePrivyInternal();return r.usePrivyEventSubscription("sendSolanaTransaction",e),{sendTransaction:t}},exports.useSignMessage=function(e){let{solanaSignMessage:t}=l.usePrivyInternal();return r.usePrivyEventSubscription("signSolanaMessage",e),{signMessage:async e=>{let n=Buffer.from(e.message).toString("base64"),r=await t({message:n,options:e.options});return new Uint8Array(Buffer.from(r.signature,"base64"))}}},exports.useSignTransaction=function(e){let{signSolanaTransaction:t}=l.usePrivyInternal();return r.usePrivyEventSubscription("signSolanaTransaction",e),{signTransaction:t}},exports.useSolanaFundingPlugin=()=>r.useRegisterPlugin(o.t);
