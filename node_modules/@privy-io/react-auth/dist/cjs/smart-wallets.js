"use strict";var e=require("react/jsx-runtime"),t=require("react"),r=require("./useWallets-Dmyb5a0t.js"),i=require("./internal-context-DV3MljLU.js"),n=require("./getEmbeddedConnectedWallet-DTU4T9TJ.js"),a=require("./smart-wallets-BJE1oUqH.js");require("viem/utils"),require("tinycolor2"),require("ofetch"),require("viem"),require("./getPublicClient-hVv5ZSWd.js"),require("permissionless"),require("permissionless/accounts"),require("permissionless/clients/pimlico"),require("viem/account-abstraction"),require("@privy-io/js-sdk-core");let l=/*#__PURE__*/t.createContext({client:void 0,getClientForChain:i.notImplemented});let s=/*#__PURE__*/t.createContext({config:void 0}),o=()=>{let{config:e}=t.useContext(s);return{config:e}},c=({children:r})=>{let[n,a]=t.useState(void 0),{client:l}=i.usePrivyInternal();return t.useEffect((()=>{!n&&l&&(async()=>{try{if(!l)return void console.warn("No client found");let e=await l.getSmartWalletsConfig();a(e)}catch(e){console.warn("Error generating smart wallet config: ",e)}})()}),[!!l]),/*#__PURE__*/e.jsx(s.Provider,{value:{config:n},children:r})},d=({config:l,children:s})=>{let{config:c}=o(),{appId:d}=i.usePrivyInternal(),{chains:g,defaultChain:f,rpcConfig:C}=r.useAppConfig(),{wallets:m}=r.useWallets(),{user:h}=r.usePrivyContext(),[p,v]=t.useState(),{wrapSmartAccountClientWithUIs:W}=a.useSmartWalletsUIWrapper(),y=n.getEmbeddedConnectedWallet(m);t.useEffect((()=>{(async()=>{if(!c?.enabled)return;let e=c.configuredNetworks.find((e=>e.chainId===`eip155:${f.id}`))?f:g.find((e=>c.configuredNetworks.map((e=>e.chainId)).includes(`eip155:${e.id}`)));if(!e)throw new i.PrivyClientError("Could not find smart wallets chain configurations for any Privy client configured chains. Please configure smart wallets for your chains in the Privy dashboard.");v(await a.getSmartWalletClient({chain:e,privyAppId:d,paymasterContext:l?.paymasterContext,rpcConfig:C,embeddedWallet:y,user:h,smartWalletsConfig:c}))})()}),[!!c?.enabled,!!h?.smartWallet,!!y]);/*#__PURE__*/return e.jsx(u.Provider,{value:{client:p,config:l,getClientForChain:async({id:e})=>{let t=n.getEmbeddedConnectedWallet(m),r=await a.getSmartWalletClient({chain:g.find((t=>t.id===e)),privyAppId:d,paymasterContext:l?.paymasterContext,rpcConfig:C,embeddedWallet:t,user:h,smartWalletsConfig:c});if(!r)throw new i.PrivyClientError(`Failed to create smart wallet client for chain id: ${e}`);return W(r)}},children:s})},u=/*#__PURE__*/t.createContext({client:void 0,config:void 0,getClientForChain:i.notImplemented}),g=({children:n})=>{let{client:s,config:c,getClientForChain:d}=(()=>{let{client:e,config:r,getClientForChain:i}=t.useContext(u);return{client:e,config:r,getClientForChain:i}})(),{config:g}=o(),{wrapSmartAccountClient:f}=a.useSmartWalletsWrapper({clientConfig:c,smartWalletsConfig:g}),{user:C}=r.usePrivyContext(),{generateSiweMessageForSmartWallet:m,linkSmartWallet:h,hideWalletUIs:p}=i.usePrivyInternal();return t.useEffect((()=>{(async()=>{if(s&&C&&!C?.smartWallet&&g?.enabled)try{let e=await m({address:s.account.address,chainId:`eip155:${s.chain.id}`});p.current=!0;let t=await s.signMessage({message:e});await h({signature:t,message:e,smartWalletType:g.smartWalletType})}catch(e){console.error("Error creating smart wallet:",e)}finally{p.current=!1}})()}),[!!s,!!C?.smartWallet,!!g?.enabled]),/*#__PURE__*/e.jsx(l.Provider,{value:{client:C?.smartWallet&&s?f(s):void 0,getClientForChain:d},children:n})};exports.SmartWalletsProvider=({config:t,children:r})=>/*#__PURE__*/e.jsx(c,{children:/*#__PURE__*/e.jsx(d,{config:t,children:/*#__PURE__*/e.jsx(g,{children:r})})}),exports.useSmartWallets=()=>{let{client:e,getClientForChain:r}=t.useContext(l);return{client:e,getClientForChain:r}};
