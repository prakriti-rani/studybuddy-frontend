"use strict";var e=require("./internal-context-DV3MljLU.js"),t=require("eventemitter3"),n=require("@privy-io/js-sdk-core"),r=require("./useWallets-Dmyb5a0t.js"),o=require("react"),a=require("react/jsx-runtime"),s=require("ofetch");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=/*#__PURE__*/i(t);class l{get(e){let t=localStorage.getItem(e);return null===t?void 0:JSON.parse(t)}put(e,t){void 0!==t?localStorage.setItem(e,JSON.stringify(t)):this.del(e)}del(e){localStorage.removeItem(e)}getKeys(){return Object.entries(localStorage).map((([e])=>e))}}var d="undefined"!=typeof window&&window.localStorage?new l:new class{get(e){return this._cache[e]}put(e,t){void 0!==t?this._cache[e]=t:this.del(e)}del(e){delete this._cache[e]}getKeys(){return Object.keys(this._cache)}constructor(){this._cache={}}};class u extends e.PrivyConnectorError{constructor(){super("Wallet timeout"),this.type="wallet_error"}}class p extends e.PrivyConnectorError{constructor(){super("User rejected connection"),this.type="wallet_error"}}const h=t=>t instanceof e.PrivyConnectorError?t:t?.code?new f(t):new e.PrivyConnectorError("Unknown connector error",t);class g extends e.PrivyError{constructor(e,t,n){super(e),this.type="provider_error",this.code=t,this.data=n}}class f extends g{constructor(e){super(e.message,e.code,e.data);let t=Object.values(n.ProviderErrors).find((t=>t.eipCode===e.code));this.details=t||n.ProviderErrors.UNKNOWN_ERROR,-32002===e.code&&(e.message?.includes("already pending for origin")?e.message?.includes("wallet_requestPermissions")?this.details=n.ProviderErrors.E32002_CONNECTION_ALREADY_PENDING:this.details=n.ProviderErrors.E32002_REQUEST_ALREADY_PENDING:e.message?.includes("Already processing")&&e.message.includes("eth_requestAccounts")&&(this.details=n.ProviderErrors.E32002_WALLET_LOCKED))}}const m={ERROR_USER_EXISTS:{message:"User already exists for this address",detail:"Try another address!",retryable:!1},ERROR_TIMED_OUT:{message:"Wallet request timed out",detail:"Please try connecting again.",retryable:!0},ERROR_WALLET_CONNECTION:{message:"Could not log in with wallet",detail:"Please try connecting again.",retryable:!0},ERROR_USER_REJECTED_CONNECTION:{message:"You rejected the request",detail:"Please try connecting again.",retryable:!0},ERROR_USER_LIMIT_REACHED:{message:"Unable to link",detail:"You've reached the maximum number of linked wallets.",retryable:!1},...n.ProviderErrors};class y extends c.default{constructor(e){super(),this.walletClientType=e,this.connected=!1,this.initialized=!1}}const C=()=>{let e=d.get(r.CONNECTIONS_HISTORY_KEY);return e&&Array.isArray(e)&&e.map((e=>(e=>e&&"string"==typeof e.address&&"string"==typeof e.connectorType&&"string"==typeof e.walletClientType&&"number"==typeof e.connectedAt)(e))).every(Boolean)?e:[]};let E=["phantom","glow","solflare","backpack","okx_wallet"];const w=/*#__PURE__*/o.createContext(void 0);let v=()=>o.useContext(w);function b(e,t,n,...r){for(let o of e.current[t][n])o(...r)}const S="sdk_fiat_on_ramp_completed_with_status";let A=/*#__PURE__*/o.createContext({plugins:{current:{}}});const x=Symbol("solana-funding-plugin");function _(e){let t=new RegExp(RegExp("^eip155:(?<chainId>\\d+)$","gm")),n=t.exec(e)?.groups?.chainId;if(n)return parseInt(n);throw Error("Chain ID not compatible with CAIP-2 format.")}const T=e=>e.filter((e=>"wallets"===e.method||("exchange"===e.method?"coinbase"===e.provider:"card"===e.method||"payment-request"===e.method?"coinbase"===e.provider||"moonpay"===e.provider:(e.method,!1)))),P="moonpay";function I(e){return!!e&&void 0!==e.config&&void 0!==e.provider}function O(e){return!!e&&(void 0!==e.chain||void 0!==e.amount)}const R={[r.mainnet.id]:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",[r.sepolia.id]:"0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238",[r.optimism.id]:"0x0b2c639c533813f4aa9d7837caf62653d097ff85",[r.optimismSepolia.id]:"0x5fd84259d66Cd46123540766Be93DFE6D43130D7",[r.polygon.id]:"0x3c499c542cef5e3811e1192ce70d8cc03d5c3359",[r.polygonAmoy.id]:"0x41e94eb019c0762f9bfcf9fb1e58725bfb0e7582",[r.base.id]:"0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",[r.baseSepolia.id]:"0x036CbD53842c5426634e7929541eC2318f3dCF7e",[r.avalanche.id]:"0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",[r.avalancheFuji.id]:"0x5425890298aed601595a70ab815c96711a31bc65",[r.arbitrum.id]:"0xaf88d065e77c8cC2239327C5EDb3A432268e5831",[r.arbitrumSepolia.id]:"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d"};exports.ConnectorErrors=m,exports.ON_RAMP_COMPLETE_ANALYTICS_EVENT=S,exports.PrivyEventsContext=w,exports.PrivyPluginProvider=({children:e})=>{let t=o.useRef({});/*#__PURE__*/return a.jsx(A.Provider,{value:{plugins:t},children:e})},exports.PrivyProviderRpcError=f,exports.ProviderRpcError=g,exports.SOLANA_FUNDING_PLUGIN_ID=x,exports.SolanaWalletConnector=class extends y{get isInstalled(){return"Installed"===this.adapter.readyState}buildConnectedWallet(t,n){let r,o,a,s;if("Installed"!==t.readyState||!t.publicKey)throw Error("Wallet is not connected.");return"signMessage"in t&&(r=async(...e)=>{if(!t.connected)throw Error("Wallet is not connected.");return await t.signMessage(e[0])}),"sendTransaction"in t&&(o=async(...e)=>await t.sendTransaction(e[0],e[1],e[2])),"signTransaction"in t&&(a=async e=>await t.signTransaction(e)),"signAllTransactions"in t&&(s=async e=>await t.signAllTransactions(e)),{type:"solana",address:t.publicKey.toBase58(),meta:n,imported:!1,connectedAt:Date.now(),walletClientType:this.walletClientType,connectorType:this.connectorType,isConnected:async()=>t.connected,disconnect:()=>{try{t.disconnect()}catch(e){console.error("Wallet does not support programmatic disconnect")}},getProvider:e.notImplementedWithMessage(`${this.walletClientType||""} wallet does not support 'getProvider'`),signMessage:r??e.notImplementedWithMessage(`${this.walletClientType||""} wallet does not support 'signMessage'`),sendTransaction:o??e.notImplementedWithMessage(`${this.walletClientType||""} wallet does not support 'sendTransaction'`),signTransaction:a??e.notImplementedWithMessage(`${this.walletClientType||""} wallet does not support 'signTransaction'`),signAllTransactions:s??e.notImplementedWithMessage(`${this.walletClientType||""} wallet does not support 'signAllTransactions'`)}}async syncAccounts(){if("Installed"===this.adapter.readyState&&this.adapter.publicKey){let e={name:this.walletBranding.name,icon:"string"==typeof this.walletBranding.icon?this.walletBranding.icon:void 0,id:this.walletBranding.id};this.wallets.find((e=>this.adapter.publicKey&&e.address===this.adapter.publicKey.toBase58()))||(this.wallets=[this.buildConnectedWallet(this.adapter,e)],this.emit("walletsUpdated"))}else this.wallets.length>0&&(this.wallets=[],this.emit("walletsUpdated"))}get walletBranding(){return{id:this.adapter.name,name:this.adapter.name,icon:this.adapter.icon}}async initialize(){this.subscribeListeners(),await this.syncAccounts(),this.shouldAttemptAutoConnect()&&await this.adapter.autoConnect().catch((()=>{})),this.initialized=!0,this.emit("initialized")}async connect(e){return e.showPrompt&&await this.promptConnection(),await this.isConnected()?this.getConnectedWallet():null}async getConnectedWallet(){return this.wallets.sort(((e,t)=>t.connectedAt-e.connectedAt))[0]||null}async isConnected(){return this.adapter.connected&&["Installed"].includes(this.adapter.readyState)}subscribeListeners(){this.adapter.addListener("disconnect",this.onDisconnect),this.adapter.addListener("connect",this.onConnect),this.adapter.addListener("error",this.onError),this.adapter.addListener("readyStateChange",this.onReadyStateChange)}unsubscribeListeners(){this.adapter.removeAllListeners()}shouldAttemptAutoConnect(){return!(!this.autoConnectEnabled||!E.includes(this.walletClientType))&&("phantom"!==this.walletClientType||C().some((({walletClientType:e})=>"phantom"===e)))}constructor(e,t){super(function(e){return e.name.toLowerCase().split(" ").join("_")}(e)),this.chainType="solana",this.connectorType="solana_adapter",this.disconnect=()=>{this.adapter.disconnect().then((()=>this.onDisconnect())).catch((e=>console.error("Error disconnecting",e)))},this.promptConnection=async()=>{try{await this.adapter.connect()}catch(e){throw h(e)}},this.onDisconnect=()=>{this.syncAccounts()},this.onConnect=e=>{this.syncAccounts()},this.onError=e=>{this.syncAccounts()},this.onReadyStateChange=e=>{"Installed"!==e&&(this.connected=!1),this.syncAccounts()},this.adapter=e,this.autoConnectEnabled=t,this.wallets=[]}},exports.UserRejectedConnectionError=p,exports.WalletConnector=y,exports.WalletTimeoutError=u,exports.amountToMoonpayAmount=function(e){return parseFloat(e)},exports.e=function(){try{let e="privy:__session_storage__test",t=new l;return t.put(e,"blobby"),t.del(e),!0}catch(e){return!1}},exports.emitPrivyEvent=b,exports.extractChainIdFromCAIP2=_,exports.filterSupportedOptions=T,exports.formatConnectorError=h,exports.isBaseConnectedSolanaWallet=function(e){return"solana"===e.type},exports.isSolanaWalletConnector=function(e){return"solana"===e.chainType},exports.loadConnectionHistory=C,exports.prepareFundingModalData=({address:t,appConfig:n,fundWalletConfig:r,methodScreen:o,chainIdOverride:a,comingFromSendTransactionScreen:s=!1})=>{let i,c;if(!n.fundingConfig)throw Error("Wallet funding is not enabled");let l=T(n.fundingConfig.options);if(l.length<1)throw Error("Wallet funding is not enabled");i=a||(O(r)&&r.chain?r.chain.id:_(n.fundingConfig.defaultRecommendedCurrency.chain));let d=n.chains.find((e=>e.id===i));if(!d)throw new e.PrivyClientError(`Funding chain ${i} is not in PrivyProvider chains list`);let u=O(r)&&r.amount?r.amount:n.fundingConfig.defaultRecommendedAmount,p=!1;function h(){if(!i)return;let e=R[i];l.find((e=>"wallets"===e.method))&&!e&&console.warn("Attempting to fund with USDC on chain where USDC address is not known. Funding via external wallet will be disabled."),c=e,p=!0}O(r)&&"asset"in r?"USDC"===r.asset?h():"string"!=typeof r.asset&&"erc20"in r.asset&&(p=((e,t)=>e===R[t.id])(c=r.asset.erc20,d)):"USDC"===n.fundingConfig.defaultRecommendedCurrency.asset&&h();let g=r?.defaultFundingMethod;return{chainType:"ethereum",address:t,amount:u,chain:d,erc20Address:c,erc20ContractInfo:p?{symbol:"USDC",decimals:6}:void 0,isUSDC:p,methodScreen:o,supportedOptions:l,comingFromSendTransactionScreen:s,defaultFundingMethod:g,usingDefaultFundingMethod:!!g,preferredCardProvider:r?.card?.preferredProvider,crossChainBridgingEnabled:n.fundingConfig.crossChainBridgingEnabled??!1,cluster:{name:"mainnet-beta",rpcUrl:n.solanaClusters["mainnet-beta"]},...I(r)?{moonpayConfigOverride:r.config}:{},uiConfig:r&&"uiConfig"in r?r.uiConfig:void 0}},exports.prepareSolanaFundingModalData=function({address:e,fundWalletConfig:t,appConfig:n,comingFromSendTransactionScreen:r,methodScreen:o}){if(!n.fundingConfig)throw Error("Wallet funding is not enabled");let a=T(n.fundingConfig.options);if(a.length<1)throw Error("Wallet funding is not enabled");let s=t?.amount??n.fundingConfig.defaultRecommendedAmount,i=t?.defaultFundingMethod;return{chainType:"solana",address:e,supportedOptions:a,amount:s,isUSDC:!1,methodScreen:o,comingFromSendTransactionScreen:r,cluster:{name:t?.cluster?.name??"mainnet-beta",rpcUrl:n.solanaClusters[t?.cluster?.name??"mainnet-beta"]},crossChainBridgingEnabled:n.fundingConfig.crossChainBridgingEnabled??!1,defaultFundingMethod:i,preferredCardProvider:t?.card?.preferredProvider,usingDefaultFundingMethod:!!i,uiConfig:t?.uiConfig}},exports.privyEventsDefault={login:{onComplete:[],onError:[]},logout:{onSuccess:[]},connectWallet:{onSuccess:[],onError:[]},createWallet:{onSuccess:[],onError:[]},linkAccount:{onSuccess:[],onError:[]},update:{onSuccess:[],onError:[]},configureMfa:{onMfaRequired:[]},setWalletPassword:{onSuccess:[],onError:[]},setWalletRecovery:{onSuccess:[],onError:[]},signMessage:{onSuccess:[],onError:[]},signTypedData:{onSuccess:[],onError:[]},sendTransaction:{onSuccess:[],onError:[]},signTransaction:{onSuccess:[],onError:[]},signSolanaTransaction:{onSuccess:[],onError:[]},signSolanaMessage:{onSuccess:[],onError:[]},sendSolanaTransaction:{onSuccess:[],onError:[]},accessToken:{onAccessTokenGranted:[],onAccessTokenRemoved:[]},oAuthAuthorization:{onOAuthTokenGrant:[]},fundWallet:{onUserExited:[]},fundSolanaWallet:{onUserExited:[]},customAuth:{onAuthenticated:[],onUnauthenticated:[]}},exports.s=d,exports.useEmitPrivyEvent=function(){let e=v();return(t,n,...r)=>b(e,t,n,...r)},exports.usePlugins=()=>{let{plugins:e}=o.useContext(A);return o.useCallback((t=>e.current[t]),[e])},exports.usePollMoonpayTransactionStatus=function(t,n=!1){let[a,i]=o.useState(null),{createAnalyticsEvent:c}=e.usePrivyInternal(),{data:l,navigate:d,setModalData:u}=r.usePrivyModal(),p=l?.funding,h=o.useRef(0);return o.useEffect((()=>{let e=setInterval((async()=>{if(t)try{let[o]=await async function(e,t){return s.ofetch(`${t?r.MOONPAY_API_URL_SANDBOX:r.MOONPAY_API_URL}/transactions/ext/${e}`,{query:{apiKey:t?r.MOONPAY_PUBLIC_KEY_SANDBOX:r.MOONPAY_PUBLIC_KEY}})}(t,n),a="waitingAuthorization"===o.status&&"credit_debit_card"===o.paymentMethod?"pending":o.status;if(["failed","completed","awaitingAuthorization"].includes(a)&&(c({eventName:S,payload:{status:a,provider:P,paymentMethod:o.paymentMethod,cardPaymentType:o.cardPaymentType,currency:o.currency?.code,baseCurrencyAmount:o.baseCurrencyAmount,quoteCurrencyAmount:o.quoteCurrencyAmount,feeAmount:o.feeAmount,extraFeeAmount:o.extraFeeAmount,networkFeeAmount:o.networkFeeAmount,isSandbox:n}}),clearInterval(e)),"failed"===a||"serviceFailure"===a)return u({funding:{...p,errorMessage:"Something went wrong adding funds from Moonpay. Please try again or use another method to fund your wallet."}}),void d(r.ModalScreen.FUNDING_METHOD_SELECTION_SCREEN);i(a)}catch(t){404!==t.response?.status&&(h.current+=1),h.current>=3&&(c({eventName:S,payload:{status:"serviceFailure",provider:P}}),clearInterval(e),u({funding:{...p,errorMessage:"Something went wrong adding funds from Moonpay. Please try again or use another method to fund your wallet."}}),d(r.ModalScreen.FUNDING_METHOD_SELECTION_SCREEN))}}),3e3);return()=>clearInterval(e)}),[t,h]),a},exports.usePrivyEventSubscription=function(e,t){if(!t)return;let n=v().current[e];return o.useEffect((()=>{for(let[r,o]of Object.entries(t))Object.prototype.hasOwnProperty.call(n,r)||console.warn(`Invalid event type "${r}" for action "${e}"`),n[r]?.push(o);return()=>{for(let[r,o]of Object.entries(t))Object.prototype.hasOwnProperty.call(n,r)||console.warn(`Invalid event type "${r}" for action "${e}"`),n[r]=n[r]?.filter((e=>e!==o))}}),[t])},exports.useRegisterPlugin=(...e)=>{let{plugins:t}=o.useContext(A);o.useEffect((()=>{for(let n of e)t.current[n.id]=n;return()=>{for(let n of e)delete t.current[n.id]}}),[t])},exports.useSolanaWallets=()=>{let{exportSolanaWallet:t,createEmbeddedSolanaWallet:n,solanaWallets:o,embeddedSolanaWallets:a}=e.usePrivyInternal(),{ready:s}=r.useWallets();return{ready:s,createWallet:n,exportWallet:t,wallets:o.concat(a??[])}};
