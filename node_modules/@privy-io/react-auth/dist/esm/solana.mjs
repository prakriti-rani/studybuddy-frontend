import{isWalletAdapterCompatibleStandardWallet as e}from"@solana/wallet-adapter-base";import{StandardWalletAdapter as t}from"@solana/wallet-standard-wallet-adapter-base";import{getWallets as a}from"@wallet-standard/app";import{S as n,j as r,x as o,u as s}from"./prepareFundingModalData-due26ueW.mjs";export{c as useSolanaWallets}from"./prepareFundingModalData-due26ueW.mjs";import{useCallback as i}from"react";import{i as l}from"./importWallet-CJLTGjPg.mjs";import{u as m}from"./internal-context-mSHyF0Gq.mjs";import{r as p}from"./useWallets-DTpjk5Rk.mjs";import{t as f}from"./useFundWallet-DR5oafbj.mjs";export{u as useFundWallet}from"./useFundWallet-DR5oafbj.mjs";import"eventemitter3";import"@privy-io/js-sdk-core";import"react/jsx-runtime";import"ofetch";import"viem/utils";import"tinycolor2";import"@solana/web3.js";const d=e=>{let t,{get:r,on:o}=a(),s=e?.shouldAutoConnect??!0,i=[],l=[];function m(...e){l=(i=i.concat(...g(e))).map((e=>new n(e,s))),t?.(l)}function p(...e){l=(i=i.filter((t=>e.some((e=>t.wallet===e))))).map((e=>new n(e,s))),t?.(l)}let u=[o("register",m),o("unregister",p)];return l=(i=g(r())).map((e=>new n(e,s))),{_setOnConnectorsUpdated:e=>{t=e},onMount:()=>{u[0]||(u[0]=o("register",m)),u[1]||(u[1]=o("unregister",p))},onUnmount:()=>{let e=u.pop();for(;e;)e(),e=u.pop()},get:()=>l}};let g=a=>a.filter(e).map((e=>new t({wallet:e})));const w=()=>{let{getAccessToken:e,user:t}=p(),{refreshSessionAndUser:a,initializeWalletProxy:n}=m(),o=r();return{importWallet:i((({privateKey:r})=>l({getAccessToken:e,user:t,initializeWalletProxy:n,refreshSessionAndUser:a,emitPrivyEvent:o},{privateKey:r,chainType:"solana"})),[t,e,a,n,o])}};var S=()=>o(f);function j(e){let{sendSolanaTransaction:t}=m();return s("sendSolanaTransaction",e),{sendTransaction:t}}function y(e){let{signSolanaTransaction:t}=m();return s("signSolanaTransaction",e),{signTransaction:t}}function T(e){let{solanaSignMessage:t}=m();return s("signSolanaMessage",e),{signMessage:async e=>{let a=Buffer.from(e.message).toString("base64"),n=await t({message:a,options:e.options});return new Uint8Array(Buffer.from(n.signature,"base64"))}}}export{n as SolanaAdapterConnector,d as toSolanaWalletConnectors,w as useImportWallet,j as useSendTransaction,T as useSignMessage,y as useSignTransaction,S as useSolanaFundingPlugin};
