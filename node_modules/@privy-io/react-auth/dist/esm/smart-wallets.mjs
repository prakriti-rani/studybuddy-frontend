import{jsx as e}from"react/jsx-runtime";import{useContext as t,useState as i,useEffect as r,createContext as n}from"react";import{q as a,E as l,r as o}from"./useWallets-DTpjk5Rk.mjs";import{u as s,P as c,n as d}from"./internal-context-mSHyF0Gq.mjs";import{g as m}from"./getEmbeddedConnectedWallet-CSSBWE2p.mjs";import{u as g,g as f,a as p}from"./smart-wallets-dP5AzE1-.mjs";import"viem/utils";import"tinycolor2";import"ofetch";import"viem";import"./getPublicClient-wHgCncHx.mjs";import"permissionless";import"permissionless/accounts";import"permissionless/clients/pimlico";import"viem/account-abstraction";import"@privy-io/js-sdk-core";let h=/*#__PURE__*/n({client:void 0,getClientForChain:d});const u=({config:t,children:i})=>/*#__PURE__*/e(y,{children:/*#__PURE__*/e(W,{config:t,children:/*#__PURE__*/e(b,{children:i})})}),C=()=>{let{client:e,getClientForChain:i}=t(h);return{client:e,getClientForChain:i}};let w=/*#__PURE__*/n({config:void 0}),v=()=>{let{config:e}=t(w);return{config:e}},y=({children:t})=>{let[n,a]=i(void 0),{client:l}=s();return r((()=>{!n&&l&&(async()=>{try{if(!l)return void console.warn("No client found");let e=await l.getSmartWalletsConfig();a(e)}catch(e){console.warn("Error generating smart wallet config: ",e)}})()}),[!!l]),/*#__PURE__*/e(w.Provider,{value:{config:n},children:t})},W=({config:t,children:n})=>{let{config:d}=v(),{appId:p}=s(),{chains:h,defaultChain:u,rpcConfig:C}=a(),{wallets:w}=l(),{user:y}=o(),[W,b]=i(),{wrapSmartAccountClientWithUIs:I}=g(),P=m(w);r((()=>{(async()=>{if(!d?.enabled)return;let e=d.configuredNetworks.find((e=>e.chainId===`eip155:${u.id}`))?u:h.find((e=>d.configuredNetworks.map((e=>e.chainId)).includes(`eip155:${e.id}`)));if(!e)throw new c("Could not find smart wallets chain configurations for any Privy client configured chains. Please configure smart wallets for your chains in the Privy dashboard.");b(await f({chain:e,privyAppId:p,paymasterContext:t?.paymasterContext,rpcConfig:C,embeddedWallet:P,user:y,smartWalletsConfig:d}))})()}),[!!d?.enabled,!!y?.smartWallet,!!P]);/*#__PURE__*/return e(F.Provider,{value:{client:W,config:t,getClientForChain:async({id:e})=>{let i=m(w),r=await f({chain:h.find((t=>t.id===e)),privyAppId:p,paymasterContext:t?.paymasterContext,rpcConfig:C,embeddedWallet:i,user:y,smartWalletsConfig:d});if(!r)throw new c(`Failed to create smart wallet client for chain id: ${e}`);return I(r)}},children:n})},F=/*#__PURE__*/n({client:void 0,config:void 0,getClientForChain:d}),b=({children:i})=>{let{client:n,config:a,getClientForChain:l}=(()=>{let{client:e,config:i,getClientForChain:r}=t(F);return{client:e,config:i,getClientForChain:r}})(),{config:c}=v(),{wrapSmartAccountClient:d}=p({clientConfig:a,smartWalletsConfig:c}),{user:m}=o(),{generateSiweMessageForSmartWallet:g,linkSmartWallet:f,hideWalletUIs:u}=s();return r((()=>{(async()=>{if(n&&m&&!m?.smartWallet&&c?.enabled)try{let e=await g({address:n.account.address,chainId:`eip155:${n.chain.id}`});u.current=!0;let t=await n.signMessage({message:e});await f({signature:t,message:e,smartWalletType:c.smartWalletType})}catch(e){console.error("Error creating smart wallet:",e)}finally{u.current=!1}})()}),[!!n,!!m?.smartWallet,!!c?.enabled]),/*#__PURE__*/e(h.Provider,{value:{client:m?.smartWallet&&n?d(n):void 0,getClientForChain:l},children:i})};export{u as SmartWalletsProvider,C as useSmartWallets};
