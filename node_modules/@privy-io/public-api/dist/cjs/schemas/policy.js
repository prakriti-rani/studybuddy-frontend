"use strict";var e=require("zod"),t=require("@privy-io/api-base"),r=require("./wallet-api.js");require("./api.js"),require("./core.js"),require("bs58"),require("libphonenumber-js/max"),require("viem");const i=e.z.enum(["ALLOW","DENY"]);let a=e.z.union([e.z.string(),e.z.number(),e.z.boolean(),e.z.null()]),o=e.z.lazy((()=>e.z.union([a,e.z.array(o),e.z.record(o)])));const n=e.z.union([e.z.literal("eq"),e.z.literal("gt"),e.z.literal("gte"),e.z.literal("lt"),e.z.literal("lte"),e.z.literal("in")]),s=e.z.object({operator:n,value:e.z.union([e.z.string(),e.z.array(e.z.string())])}),l=e.z.object({field_source:e.z.literal("ethereum_transaction"),field:e.z.union([e.z.literal("to"),e.z.literal("value")])}).strict().merge(s),c=e.z.object({field_source:e.z.literal("ethereum_calldata"),field:e.z.string(),abi:o}).strict().merge(s),z=e.z.object({field_source:e.z.literal("ethereum_typed_data_domain"),field:e.z.union([e.z.literal("chain_id"),e.z.literal("verifying_contract")])}).strict().merge(s),d=e.z.object({field_source:e.z.literal("ethereum_typed_data_message"),field:e.z.string(),typed_data:e.z.object({types:r.TypedDataTypesInputParams,primary_type:e.z.string()})}).strict().merge(s),u=e.z.discriminatedUnion("field_source",[l,c,z,d]),m=e.z.object({name:e.z.string().max(50,"Rule name must be fewer than 50 characters"),conditions:e.z.array(u),action:i}).strict();let p=e.z.union([e.z.literal("eth_sendTransaction"),e.z.literal("eth_signTransaction"),e.z.literal("eth_signTypedData_v4")]),y=e.z.object({method:p,rules:e.z.array(m)}).strict();const _=e.z.object({version:e.z.literal("1.0"),name:e.z.string().max(50,"Policy name must be fewer than 50 characters"),chain_type:e.z.literal("ethereum"),method_rules:e.z.array(y),default_action:i}).strict(),h=_.extend({id:e.z.string(),created_at:e.z.number()}),b=e.z.object({policy_id:e.z.string({required_error:"Policy ID must be provided",invalid_type_error:"Policy ID is not a valid string"}).min(1)}).catch((({error:e})=>{throw new t.InvalidInputError(e.message,t.PrivyErrorCode.INVALID_DATA)})),g=e.z.object({name:e.z.string().trim().min(1,"Name is required").max(50,"Policy name must be fewer than 50 characters").optional(),method_rules:e.z.array(y).optional()}).strict().superRefine(((e,t)=>{Object.values(e).every((e=>null==e))&&t.addIssue({code:"custom",message:"At least one field must be provided"})}));exports.BaseEthereumCondition=s,exports.Condition=u,exports.ConditionOperator=n,exports.EthereumCalldataCondition=c,exports.EthereumTransactionCondition=l,exports.EthereumTypedDataDomainCondition=z,exports.EthereumTypedDataMessageCondition=d,exports.PolicyAction=i,exports.PolicyIdFromPath=b,exports.PolicyResponse=h,exports.PolicyWithoutValidation=_,exports.Rule=m,exports.UpdatePolicyInput=g;
